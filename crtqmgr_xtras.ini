* # crtqmgr_xtras.ini
* # Copyright IBM Corp. 2006, 2011
* # Carlos Alberto Bagatin - cbagatin@br.ibm.com
* # 10/24/2011 - v0.4
* ################################################################################
* # Xtras QMGR configuration
* # 
* # This will uses with runmqsc <QMGR>
* #
* # USAGE: NONE - this is a parameter file from crtqmgr.sh
* #               to alter any QMGR standard definitions
* # NOTE - all lines must starts with "*" due by this file will handle by
* #        runmqsc <QMGR>
* #      - All attributes is for WMQ v7
* #REVISION HISTORY##############################################################
* # 0.4 10/24/11 Included features related with MQ Statistics
* #
* #-----------------------------------------------------------------------------
*
*  - ALL DEFAULT ATTRIBUTE IS COMMENTED !!! ****
* **************************************************************** *
* Description of the Queue Manager NAme
* **************************************************************** *
*
* CMDLEVEL
* COMMANDQ
* DISTL
* MAXPRTY
* PLATFORM
* QMID
* QMNAME
* SYNCPT
*
*     [ SYSTEM   ] ACCTCONO ACCTINT ACCTMQI ACCTQ ACTIVREC CCSID CMDLEVEL COMMANDQ
*                  DEADQ DESCR DISTL MARKINT MAXHANDS MAXMSGL MAXPROPL MAXPRTY
*                  MAXUMSGS MONQ PLATFORM ROUTEREC SCMDSERV STATINT STATMQI
*                  STATQ SYNCPT TRIGINT
*
*     [ EVENT    ] AUTHOREV CHLEV CMDEV CONFIGEV INHIBTEV LOCALEV(DISABLED) LOGGEREV
*                  PERFMEV REMOTEEV, SSLEV, STRSTPEV
*
*     [ DQM      ] CHAD CHADEV CHADEXIT CHLEV DEADQ DEFXMITQ IPADDRV MONCHL QMID
*                  SCHINIT SSLCRLNL SSLCRYP SSLEV SSLFIPS SSLKEYR STATCHL
*
*     [ CLUSTER  ] CHADEXIT CLWLDATA CLWLEXIT CLWLLEN CLWLMRUC CLWLUSEQ MONACLS
*                  QMID REPOS REPOSNL STATACLS.
*
*     [ PUBSUB   ] PARENT PSRTYCNT PSNPMSG PSNPRES PSSYNCPT PSMODE TREELIFE
*
*ALTER QMGR DESCR( )
*   DESCR(string) 
*   Plain-text comment. It provides descriptive information about the queue manager. 
*   It should contain only displayable characters. The maximum length of the string 
*   is 64 characters. In a DBCS installation, it can contain DBCS characters (subject 
*   to a maximum length of 64 bytes).
*   If characters are used that are not in the coded character set identifier (CCSID) 
*   for this queue manager, they might be translated incorrectly if the information 
*   is sent to another queue manager.
*
* **************************************************************** *
* The CCSID attribute
* **************************************************************** *
* CCSID common - http://www.borgendale.com/codepage/ccsid.txt
*   819  0333   sbcs-iso             819         ISO8859_1    I  ISO 8859-1 ASCII
*  1208  04b8   utf-8               1400 + 1449  UTF8         I  UTF-8
*
*ALTER QMGR QMGR CCSID(1208)
*
* **************************************************************** *
* The MQ Cluster attribute
* **************************************************************** *
*ALTER QMGR REPOS( )                                
*   REPOS(clustername) 
*   The name of a cluster for which this queue manager provides a repository 
*   manager service. The maximum length is 48 characters conforming to the 
*   rules for naming WebSphere MQ objects. 
*   No more than one of the resultant values of REPOS and REPOSNL can be nonblank.
*   If you use the REPOS parameter to create a full repository queue manager, 
*   use cluster-sender channels to connect it to at least one other full 
*   repository queue manager in the cluster. See the information in 
*   WebSphere MQ Queue Manager Clusters for details about using 
*   cluster-sender channels with full repository queue managers.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, 
*   i5/OS, Solaris, Windows, and z/OS.
*
*ALTER QMGR REPOSNL( )
*   REPOSNL(nlname) 
*   The name of a namelist of clusters for which this queue manager 
*   provides a repository manager service. 
*   No more than one of the resultant values of REPOS and REPOSNL 
*   can be nonblank.
*   If both REPOS and REPOSNL are blank, or REPOS is blank and the 
*   namelist specified by REPOSNL is empty, this queue manager does 
*   not have a full repository, but might be a client of other 
*   repository services that are defined in the cluster.
*   If you use the REPOSNL parameter to create a full repository 
*   queue manager, use cluster-sender channels to connect it to 
*   at least one other full repository queue manager in each 
*   cluster specified in the namelist. See the information in 
*   WebSphere MQ Queue Manager Clusters for details about using 
*   cluster-sender channels with full repository queue managers.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, 
*   i5/OS, Solaris, Windows, and z/OS.
*
* **************************************************************** *
* The attributes that control the Event Monitoring are shown below:
* **************************************************************** *
ALTER QMGR AUTHOREV(ENABLED)
*   Whether authorization (Not Authorized) events are generated: 
*   DISABLED *
*      Authorization events are not generated. This is the queue managers initial 
*      default value.
*   ENABLED
*      Authorization events are generated. 
*   This value is not supported on z/OS.
*
ALTER QMGR CHLEV(ENABLED) 
*   Whether channel events are generated. 
*   DISABLED *
*      Channel events are not generated. This is the queue managers initial default value.
*   ENABLED
*      All channel events are generated.
*   EXCEPTION
*      All exception channel events are generated.
*
*ALTER QMGR CMDEV(DISABLED)
*   Specifies whether command events are generated: 
*   DISABLED *
*      Command events are not generated. This is the queue managers initial default value.
*   ENABLED
*      Command events are generated for all successful commands.
*   NODISPLAY
*      Command events are generated for all successful commands, other than DISPLAY commands.
*
*ALTER QMGR CONFIGEV(DISABLED) 
*   Whether configuration events are generated: 
*   ENABLED
*      Configuration events are generated. After setting this value, 
*      issue REFRESH QMGR TYPE(CONFIGEV) commands for all objects to bring the queue manager 
*      configuration up-to-date.
*   DISABLED *
*      Configuration events are not generated. This is the queue managers initial default value.
*      a 
*
*ALTER QMGR INHIBTEV(DISABLED)
*   Whether inhibit (Inhibit Get and Inhibit Put) events are generated: 
*   ENABLED
*      Inhibit events are generated.
*   DISABLED *
*      Inhibit events are not generated. This is the queue managers initial default value.
*
*ALTER QMGR LOCALEV(DISABLED) 
*   Whether local error events are generated: 
*   ENABLED
*      Local error events are generated.
*   DISABLED *
*      Local error events are not generated. This is the queue managers initial default value.
*
*ALTER QMGR LOGGEREV(DISABLED)
*   Whether recovery log events are generated: 
*   DISABLED *
*      Logger events are not generated. This is the queue managers initial default value.
*   ENABLED
*      Logger events are generated.
*   This parameter is valid only on AIX, HP-UX, Linux, i5/OS, Solaris, and Windows.
*
*ALTER QMGR PERFMEV(DISABLED) 
*   Whether performance-related events are generated: 
*   ENABLED
*      Performance-related events are generated.
*   DISABLED *
*      Performance-related events are not generated. This is the queue managers initial default value.
*   On WebSphere MQ for z/OS all the queue managers in a queue-sharing group must have the same setting.
*
*ALTER QMGR REMOTEEV(DISABLED)
*   Whether remote error events are generated: 
*   DISABLED *
*      Remote error events are not generated. This is the queue managers initial default value.
*   ENABLED
*      Remote error events are generated.
*   If you are using the reduced function form of WebSphere MQ for z/OS supplied 
*   with WebSphere Application Server, 
*   only DISABLED is valid.
*
ALTER QMGR SSLEV(ENABLED) 
*   Whether SSL events are generated. 
*   DISABLED *
*      SSL events are not generated. This is the queue managers initial default value.
*   ENABLED
*      All SSL events are generated.
*
ALTER QMGR STRSTPEV(ENABLED)
*   Whether start and stop events are generated: 
*   ENABLED *
*      Start and stop events are generated. This is the queue managers initial default value.
*   DISABLED
*      Start and stop events are not generated.
*
******************************************************************************
* Trace route parameter
******************************************************************************
*
ALTER QMGR ROUTEREC(MSG)
*   Whether trace-route information is recorded if requested in the message. 
*   If this parameter is not set to DISABLED, it controls whether any reply generated is sent to 
*   SYSTEM.ADMIN.TRACE.ROUTE.QUEUE, or to the destination specified by the message itself. 
*   If ROUTEREC is not DISABLED, messages not yet at the final destination might have 
*   information added to them. 
*   DISABLED
*      Trace-route information is not recorded.
*   MSG *
*      Trace-route information is recorded and sent to the destination specified by the 
*      originator of the message 
*      causing the trace route record. This is the queue managers initial default value.
*   QUEUE
*      Trace-route information is recorded and sent to SYSTEM.ADMIN.TRACE.ROUTE.QUEUE.
*   For more information about trace-route records, see Monitoring WebSphere MQ.
*
******************************************************************************
* attributes for real-time monitoring
******************************************************************************
*
ALTER QMGR MONQ(LOW)
*   Controls the collection of online monitoring data for queues. 
*   OFF *
*      Online monitoring data collection is turned off for queues specifying a 
*      value of QMGR in their MONQ parameter. 
*      This is the queue managers initial default value.
*   NONE
*      Online monitoring data collection is turned off for queues regardless of 
*      the setting of their MONQ parameter.
*   LOW
*      Online monitoring data collection is turned on for queues specifying a 
*      value of QMGR in their MONQ parameter.
*   MEDIUM
*      Online monitoring data collection is turned on for queues specifying a 
*      value of QMGR in their MONQ parameter.
*   HIGH
*      Online monitoring data collection is turned on for queues specifying 
*      a value of QMGR in their MONQ parameter.
*   Note that, in contrast to MONCHL, there is no distinction between the values LOW, MEDIUM and HIGH. 
*   These values all turn data collection on, but do not affect the rate of collection.
*   Changes to this parameter are effective only for queues opened after the parameter has been changed. 
*
ALTER QMGR MONACLS(QMGR)
*   Controls the collection of online monitoring data for auto-defined cluster-sender channels: 
*   QMGR *
*      Collection of online monitoring data is inherited from the setting of the queue managers MONCHL parameter. 
*      This is the queue managers initial default value.
*   OFF
*      Monitoring for the channel is switched off.
*   LOW
*      Unless MONCHL is NONE, monitoring is switched on with a low rate of data collection with a minimal impact 
*      on system performance. The data collected is not likely to be the most current.
*   MEDIUM
*      Unless MONCHL is NONE, monitoring is switched on with a moderate rate of data collection with 
*      limited impact on system performance.
*   HIGH
*      Unless MONCHL is NONE, monitoring is switched on with a high rate of data collection 
*      with a likely impact 
*      on system performance. The data collected is the most current available.
*      A change to this parameter takes effect only on channels started after the change occurs. 
*      Any channel started before the change to the parameter continues with the value in force 
*      at the time that the channel started.
*
ALTER QMGR MONCHL(LOW)
*   Controls the collection of online monitoring data for channels. 
*   OFF *
*      Online monitoring data collection is turned off for channels specifying a value of 
*      QMGR in their MONCHL parameter. This is the queue managers initial default value.
*   NONE
*      Online monitoring data collection is turned off for channels regardless of the 
*      setting of their MONCHL parameter.
*   LOW
*      Online monitoring data collection is turned on, with a low ratio of data collection, 
*      for channels specifying a value of QMGR in their MONCHL parameter.
*   MEDIUM
*      Online monitoring data collection is turned on, with a moderate ratio of data collection, 
*      for channels specifying a value of QMGR in their MONCHL parameter.
*   HIGH
*      Online monitoring data collection is turned on, with a high ratio of data collection, 
*      for channels specifying a value of QMGR in their MONCHL parameter.
*      A change to this parameter takes effect only on channels started after the change occurs. 
*      Any channel started before the change to the parameter continues with the value in force 
*      at the time that the channel started.
*
******************************************************************************
* Accounting - configuration
******************************************************************************
*
*ALTER QMGR ACCTCONO(DISABLED)
*   Additional MQSC accountin command
*   Specifies whether applications can override the settings of the 
*   ACCTQ and ACCTMQI queue manager parameters: 
*   DISABLED
*      Applications cannot override the settings of the ACCTQ and ACCTMQI parameters. 
*      This is the queue managers initial default value.
*   ENABLED
*      Applications can override the settings of the ACCTQ and ACCTMQI parameters 
*      by using the options field of the MQCNO structure of the MQCONNX API call.
*      Changes to this parameter are effective for connections to the queue manager 
*      that occur after the change.
*      This parameter is valid only on i5/OS®, UNIX systems, and Windows.
*
*ALTER QMGR ACCTINT(1800)
*   ACCTINT(integer) 
*   The time interval, in seconds, at which intermediate accounting records are written. 
*   Specify a value in the range 1 through 604 800. The queue managers 
*   initial default value is 1800. *
*   Changes to this parameter are effective for connections to the queue manager 
*   that occur after the change.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*
*ALTER QMGR ACCTMQI(OFF)
*   Specifies whether accounting information for MQI data is to be collected: 
*   The collection of MQI accounting information is controlled by the queue manger attribute
*   OFF *
*      MQI accounting data collection is disabled. This is the queue managers initial default value.
*   ON
*      MQI accounting data collection is enabled.
*      If queue manager attribute ACCTCONO is set to ENABLED, the value of this parameter 
*      can be overridden using the options field of the MQCNO structure.
*   Changes to this parameter are effective for connections to the queue manager that occur after the change.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*
ALTER QMGR ACCTQ(ON)
*   Specifies whether accounting data is to be collected for all queues. 
*   The collection of queue accounting infomration is controlled by the queue or queue manager attribute ACCTQ.
*   On z/OS®, the data collected is class 3 accounting data (thread-level and queue-level accounting). 
*   OFF *
*      Accounting data collection is disabled for all queues which specify QMGR as the 
*      value for their ACCTQ parameter. This is the queue managers initial default value, 
*      except on z/OS where it is ON.
*   ON
*      Accounting data collection is enabled for all queues which specify QMGR as the value 
*      of their ACCTQ parameter. On z/OS systems, you need to have switched on class 3 accounting 
*      by the START TRACE command. 
*      This is the queue managers initial default value on z/OS.
*   NONE
*      Accounting data collection for all queues is disabled regardless of the value of 
*      the queues ACCTQ parameter.
*   Changes to this parameter are effective only for connections to the queue manager 
*   occurring after the change to the parameter.
*
******************************************************************************
* Statistics
******************************************************************************
*
ALTER QMGR STATACLS(LOW)
*   Whether statistics data is to be collected for auto-defined cluster-sender channels: 
*   QMGR *
*      Collection of statistics data is inherited from the setting of the queue managers 
*      STATCHL parameter. This is the queue managers initial default value.
*   OFF
*      Statistics data collection for the channel is switched off.
*   LOW
*      Unless STATCHL is NONE, statistics data collection is switched on with a low ratio 
*      of data collection with a minimal impact on system performance.
*   MEDIUM
*      Unless STATCHL is NONE, statistics data collection is switched on with a 
*      moderate ratio of data collection.
*   HIGH
*      Unless STATCHL is NONE, statistics data collection is switched on with a high ratio 
*      of data collection.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*   A change to this parameter takes effect only on channels started after the change occurs. 
*   Any channel started before the change to the parameter continues with the value in force 
*   at the time that the channel started.
*
ALTER QMGR STATCHL(LOW)
*   Whether statistics data is to be collected for channels: 
*   NONE
*      Statistics data collection is turned off for channels regardless of the setting of 
*      their STATCHL parameter.
*   OFF *
*      Statistics data collection is turned off for channels specifying a value of QMGR in 
*      their STATCHL parameter.  This is the queue managers initial default value. 
*   LOW
*      Statistics data collection is turned on, with a low ratio of data collection, 
*      for channels specifying a value of QMGR in their STATCHL parameter.
*   MEDIUM
*      Statistics data collection is turned on, with a moderate ratio of data collection, 
*      for channels specifying a value of QMGR in their STATCHL parameter.
*   HIGH
*      Statistics data collection is turned on, with a high ratio of data collection, 
*      for channels specifying a value of QMGR in their STATCHL parameter.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*   A change to this parameter takes effect only on channels started after the change occurs.
*   Any channel started before the change to the parameter continues with the value in force 
*   at the time that the channel started.
*
ALTER QMGR STATINT(60)
*   STATINT(integer) 
*   The time interval, in seconds, at which statistics monitoring data is 
*   written to the monitoring queue. 
*   Specify a value in the range 1 through 604 800. The queue managers 
*   initial default value is 1800. STATINT(1800) *
*   This parameter is valid only on AIX, HP-UX, Linux, i5/OS, Solaris, and Windows.
*   Changes to this parameter take immediate effect on the collection of monitoring 
*   and statistics data.
*
ALTER QMGR STATMQI(ON)
*   Whether statistics monitoring data is to be collected for the queue manager: 
*   OFF *
*      Data collection for MQI statistics is disabled. This is the queue managers 
*      default value.
*   ON
*      Data collection for MQI statistics is enabled.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*   Changes to this parameter take immediate effect on the collection of monitoring 
*   and statistics data.
*
ALTER QMGR STATQ(ON)
*   Whether statistics data is to be collected for queues: 
*   NONE
*      Statistics data collection is turned off for queues regardless of the 
*      setting of their STATQ parameter.
*   OFF *
*      Statistics data collection is turned off for queues specifying a value of 
*      QMGR in their STATQ parameter. This is the queue manager initial default value.
*   ON
*      Statistics data collection is turned on for queues specifying a value of 
*      QMGR in their STATQ parameter.
*   This parameter is valid only on i5/OS, UNIX systems, and Windows.
*   Statistics messages are generated only for queues which are opened after statistics 
*   collection has been enabled. 
*
******************************************************************************
* 
******************************************************************************
*ALTER QMGR ACTIVREC(MSG)
*   Whether activity reports are generated if requested in the message: 
*   DISABLED
*      Activity reports are not generated.
*   MSG *
*      Activity reports are generated and sent to the reply queue specified by the originator
*      in the message causing the report. This is the queue managers initial default value.
*   QUEUE
*      Activity reports are generated and sent to SYSTEM.ADMIN.ACTIVITY.QUEUE.
*   For more information about activity reports, see Monitoring WebSphere® MQ.
*
******************************************************************************
* 
******************************************************************************
*                                
*ALTER QMGR CHAD(DISABLED)
*   Whether receiver and server-connection channels can be defined automatically: 
*   DISABLED *
*      Auto-definition is not used. This is the queue managers initial default value.
*   ENABLED
*      Auto-definition is used.
*   Cluster-sender channels can always be defined automatically, regardless of the 
*   setting of this parameter.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, and Windows.
*
*ALTER QMGR CHADEV(DISABLED)
*   Whether channel auto-definition events are generated. 
*   DISABLED *
*      Auto-definition events are not generated. This is the queue managers initial default value.
*   ENABLED
*      Auto-definition events are generated.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, and Windows.
*
*ALTER QMGR CHADEXIT( )
*   CHADEXIT(string) 
*   Auto-definition exit name. 
*   If this name is nonblank, the exit is called when an inbound request for an undefined receiver, 
*   server-connection, or cluster-sender channel is received. It is also called when starting a 
*   cluster-receiver channel.
*   The format and maximum length of the name depends on the environment: 
*   - On Windows, it is of the form dllname(functionname) where dllname is specified without the suffix 
*     (".DLL"). The maximum length is 128 characters.
*   - On i5/OS, it is of the form: 
*     progname libname
*   where program name occupies the first 10 characters and libname the second 10 characters 
*   (both blank-padded to the right if necessary). The maximum length of the string is 20 characters.
*   - On AIX, HP OpenVMS, HP-UX, Linux, and Solaris, it is of the form libraryname(functionname). 
*     The maximum length is 128 characters.
*   - On z/OS, it is a load module name, the maximum length is 8 characters.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, Windows, 
*   and z/OS. On z/OS, it applies only to cluster-sender and cluster-receiver channels.
*
*ALTER QMGR CLWLDATA( )
*   CLWLDATA(string) 
*   Cluster workload exit data. The maximum length of the string is 32 characters. 
*   This string is passed to the cluster workload exit when it is called.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, Windows, and z/OS.
*
*ALTER QMGR CLWLEXIT( )
*   CLWLEXIT(string) 
*   Cluster workload exit name. 
*   If this name is nonblank, the exit is called when a message is put to a cluster queue. 
*   The format and maximum length of the name depends on the environment: 
*   - On UNIX systems and HP OpenVMS, it is of the form libraryname(functionname). 
*     The maximum length is 128 characters.
*   - On Windows, it is of the form dllname(functionname), where dllname is specified without 
*     the suffix (".DLL"). The maximum length is 128 characters.
*   - On z/OS, it is a load module name. The maximum length is 8 characters.
*   - On i5/OS, it is of the form: 
*     progname libname
*   where program name occupies the first 10 characters and libname the second 10 characters 
*   (both blank-padded to the right if necessary). The maximum length is 20 characters.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, Windows, and z/OS.
*
*ALTER QMGR CLWLLEN(100)                            
*   CLWLLEN(integer) 
*   The maximum number of bytes of message data that is passed to the cluster workload exit. 
*   Specify a value: 
*   - in the range zero through 100 MB on WebSphere MQ for z/OS systems
*   - in the range zero through 999 999 999 on other platforms
*   The initial default value is 100.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, Windows and z/OS. 
*
*ALTER QMGR CLWLMRUC(999999999)
*   CLWLMRUC(integer) 
*   The maximum number of most recently used outbound cluster channels. 
*   Specify a value in the range 1 through 999 999 999.
*   The initial default value is 999 999 999.
*   For more information about this attribute, see WebSphere MQ Queue Manager Clusters.
*
*ALTER QMGR CLWLUSEQ(LOCAL)                         
*   For queues whose CLWLUSEQ parameter has a value of QMGR, specifies the behavior of 
*   an MQPUT operation when the target queue has a local instance and at least one 
*   remote cluster instance (except where the MQPUT originates from a cluster channel). 
*   Specify either: 
*   LOCAL *
*      The local queue is the only target for MQPUT operations. 
*      This is the queue managers initial default value.
*   ANY
*      The queue manager treats the local queue as another instance of the cluster 
*      queue for the purposes of workload distribution.
*   For more information about this attribute, see WebSphere MQ Queue Manager Clusters.
*
*ALTER QMGR DEADQ(SYSTEM.DEAD.LETTER.QUEUE)
* NOTE: DEADQ is treated on main script !!!! dont change
*   DEADQ(string) 
*   The local name of a dead-letter queue (or undelivered-message queue) on which messages 
*   that cannot be routed to their correct destination are put. 
*   The queue named must be a local queue. See Rules for naming WebSphere MQ objects.
* 
*ALTER QMGR DEFXMITQ( )                             
*   DEFXMITQ(string) 
*   Local name of the default transmission queue on which messages destined for a 
*   remote queue manager are put, if there is no other suitable transmission queue defined. 
*   The queue named must be a local transmission queue. See Rules for naming WebSphere MQ objects.
*
*ALTER QMGR IPADDRV(IPV4)                           
*   Specifies which IP protocol is to be used for channel connections. 
*   IPV4 *
*      The IPv4 IP address is to be used. This is the queue managers initial default value.
*   IPV6
*      The IPv6 IP address is to be used.
*   This parameter is used only in systems running IPv4 and IPv6 and it only applies 
*   to channels defined with a TRPTYPE of TCP when either of the following two conditions is true: 
*   - The channel's CONNAME parameter contains a host name that resolves to both an IPv4 
*     and an IPv6 address, and the LOCLADDR parameter is not specified.
*   - The value of the channel's CONNAME and LOCLADDR parameters is a host name that resolves 
*     to both an IPv4 and IPv6 address.
*
*ALTER QMGR MARKINT(5000)
*   The time interval, expressed in milliseconds, for which messages that 
*   have been marked as browsed by a call to MQGET, with the get message 
*   option MQGMO_MARK_BROWSE_CO_OP, are expected to remain mark-browsed. 
*   The queue manager might automatically unmark messages, that have been 
*   marked as browsed for the cooperating set of handles, when they have 
*   been marked for more than this approximate interval. 
*   This does not affect the state of any message marked as browse by a 
*   call to MQGET with the get message option MQGMO_MARK_BROWSE_HANDLE.
*   Specify a value in the range zero through 999 999 999. 
*   The queue managers initial default value is 5000. 
*   The special value NOLIMIT indicates that the queue manager does not 
*   automatically unmark messages by this process.
*
*ALTER QMGR MAXHANDS(256)                           
*   MAXHANDS(integer) 
*   The maximum number of open handles that any one connection can have at the same time. 
*   This is a value in the range zero through 999 999 999.
*
*ALTER QMGR MAXMSGL(104857600)
*   MAXMSGL(integer) 
*   The maximum length of messages allowed on queues for this queue manager. 
*   This is in the range 32 KB through 100 MB. The default is 4 MB (4 194 304 bytes).
*   You can use any queue as a shared queue for storing long messages, 
*   if its MAXMSGL attribute is set to a value greater than 63 KB. 
*   The CFLEVEL parameter of an associated coupling facility structure 
*   does not impose any restrictions.
*   If you reduce the maximum message length for the queue manager, 
*   you must also reduce the maximum message length of the 
*   SYSTEM.DEFAULT.LOCAL.QUEUE definition, and all other queues connected 
*   to the queue manager. This ensures that the queue managers limit is not 
*   less than that of any of the queues associated with it. If you do not do this, 
*   and applications inquire only the value of the queues MAXMSGL, they might not work correctly.
*   This parameter is valid only on AIX, HP OpenVMS, HP-UX, Linux, i5/OS, Solaris, and Windows. 
*
*ALTER QMGR MAXPROPL(NOLIMIT)                       
*   MAXPROPL(integer) 
*   The maximum length of property data in bytes that can be associated with a message. 
*   This is in the range 0 through 100 MB (104 857 600 bytes).
*   The special value NOLIMIT indicates that the size of the properties is not restricted, 
*   except by the upper limit.
*   This parameter is valid only on i5/OS, UNIX systems, Windows, and z/OS.
*
*ALTER QMGR MAXUMSGS(10000)                                                      
*   MAXUMSGS(integer) 
*   The maximum number of uncommitted messages within a syncpoint. 
*   This is a limit on the number of messages that can be retrieved, plus the number 
*   of messages that can be put, within any single syncpoint. The limit does not apply
*   to messages that are put or retrieved outside syncpoint.
*   The number includes any trigger messages and report messages generated within 
*   the same unit of recovery.
*   Be aware that reducing the value of MAXUMSGS may cause problems to existing 
*   applications and queue manager processes, such as clustering on z/OS, 
*   if they are already using a higher value.
*   Specify a value in the range 1 through 999 999 999.
*
*ALTER QMGR PARENT( )                               
*   PARENT(parentname) 
*   The name of the parent queue manager to which the local queue manager 
*   is to connect as its child in a hierarchy. 
*   A blank value indicates that the queue manager has no parent queue manager.
*   If there is an existing parent queue manager it is disconnected.
*   WebSphere MQ hierarchical connections require that the queue manager 
*   attribute PSMODE is set to ENABLED.
*   The value of PARENT can be set to a blank value if PSMODE is set to DISABLED.
*   Before a queue manager can connect to a queue manager as its child in a hierarchy, 
*   channels must exist in both directions, between the parent queue manager 
*   and the child queue manager.
*   If a parent has already been defined, the ALTER QMGR QMGR PARENT command disconnects
*   from the original parent and sends a connection flow to the new parent queue manager.
*
*ALTER QMGR PSRTYCNT(5)
*   PSRTYCNT
*   When the queued publish/subscribe interface fails to process a command message 
*   under syncpoint (for example a publish message that cannot be delivered to a 
*   subscriber because the subscriber queue is full and it is not possible to put 
*   the publication on the dead letter queue), the unit of work is backed out and 
*   the command retried this number of times before the broker attempts to process 
*   the command message according to its report options instead. 
*   The initial value for this parameter on a new queue manager is 5. *
*   Range is 0 to 999 999 999.
*
*ALTER QMGR PSNPMSG(DISCARD)                        
*   If the queued publish/subscribe interface cannot process a non-persistent 
*   input message it might attempt to write the input message to the dead-letter 
*   queue (depending on the report options of the input message). If the attempt 
*   to write the input message to the dead-letter queue fails, and the 
*   MQRO_DISCARD_MSG report option was specified on the input message or the value 
*   of PSNPMSG is DISCARD, the publish/subscribe interface discards the input message. 
*   If the value of PSNPMSG is KEEP, the publish/subscribe interface will discard 
*   he input message only if the MQRO_DISCARD_MSG report option was set in the input message. 
*   Note: If you specify a value of IFPER for PSSYNCPT, you must not specify a value of KEEP for PSNPMSG.
*   DISCARD *
*      Non-persistent input messages may be discarded if they cannot be processed.
*   KEEP
*      Non-persistent input messages will not be discarded if they cannot be processed. 
*      In this situation the queued publish/subscribe interface will continue to retry 
*      to process this message at appropriate intervals and does not continue processing subsequent messages.
*
*ALTER QMGR PSNPRES(NORMAL)
*   If the queued publish/subscribe interface attempts to generate a response message 
*   in response to a non-persistent input message, and the response message cannot be 
*   delivered to the reply-to queue, this attribute indicates whether the queued 
*   publish/subscribe interface should try to write the undeliverable message to the 
*   dead-letter queue or whether to discard the message. 
*   For new queue managers, the initial value is NORMAL. If you specify a value of 
*   IFPER for PSSYNCPT, you must not specify a value of KEEP or SAFE for PSNPRES.
*   For migrated queue managers on Windows, UNIX systems and i5/OS, the value will 
*   depend on DLQNonPersistentResponse and DiscardNonPersistentResponse.
*   NORMAL *
*      Non-persistent responses which cannot be placed on the reply queue are put 
*      on the dead-letter queue. If they cannot be placed on the DLQ then they are discarded.
*   SAFE
*      Non-persistent responses which cannot be placed on the reply queue are put on the 
*      dead-letter queue. If the response cannot be sent and cannot be placed on the 
*      dead-letter queue then the queued publish/subscribe interface will back out of 
*      the current operation and then retry at appropriate intervals and does not 
*      continue processing subsequent messages.
*   DISCARD
*      Non-persistent responses which cannot be placed on the reply queue are discarded
*   KEEP
*      Non-persistent responses are not placed on the dead-letter queue or discarded. 
*      Instead the queued publish/subscribe interface will back out the current 
*      operation and the retry it at appropriate intervals and does not continue 
*      processing subsequent messages.
*
*ALTER QMGR PSSYNCPT(IFPER)                         
*   Controls whether the queued publish/subscribe interface processes command messages 
*   (publishes or delete publication messages) under syncpoint. 
*   YES
*      All messages are processed under syncpoint.
*   IFPER *
*      Persistent messages only are part of the sync point
*   The queue managers initial value is IFPER.
*
*ALTER QMGR SCHINIT(QMGR)
*   Whether the channel initiator should start automatically when the queue manager starts. 
*   QMGR *
*      The channel initiator will start automatically when the 
*      queue manager starts. This is the default value.
*   MANUAL
*      The channel initiator will not start automatically.
*      This parameter is valid only on AIX, HP-UX, Linux, i5/OS, Solaris, and Windows.
*
*ALTER QMGR SCMDSERV(QMGR)                        
*   Whether the command server should start automatically when the queue manager starts. 
*   QMGR *
*      The command server will start automatically when the queue manager starts. 
*      This is the default value.
* MANUAL 
*      The command server will not start automatically.
*      This parameter is valid only on AIX, HP-UX, Linux, i5/OS, Solaris, and Windows.
*
*ALTER QMGR SSLCRLNL( )
*   SSLCRLNL(nlname)
*      The name of a namelist of authentication information objects which are 
*      used to provide certificate revocation locations to allow enhanced 
*      TLS/SSL certificate checking. 
*      If SSLCRLNL is blank, certificate revocation checking is not invoked 
*      unless one of the SSL certificates used contains an AuthorityInfoAccess 
*      o CrlDistributionPoint X.509 certificate extension. 
*      Changes to SSLCRLNL, or to the names in a previously specified namelist, 
*      or to previously referenced authentication information objects become effective either: 
*      - On i5/OS, Windows, and UNIX systems when a new channel process is started.
*      - For channels that run as threads of the channel initiator on i5/OS, Windows, 
*        and UNIX systems, when the channel initiator is restarted.
*      - For channels that run as threads of the listener on i5/OS, Windows, 
*        and UNIX systems, when the listener is restarted.
*      - On z/OS, when the channel initiator is restarted.
*      - When a REFRESH SECURITY TYPE(SSL) command is issued.
*      - On i5/OS queue managers, this parameter is ignored. However, it is used 
*        to determine which authentication information objects are written to the AMQCLCHL.TAB file.
*
*ALTER QMGR SSLCRYP( )                              
*   SSLCRYP(string)
*      Sets the name of the parameter string required to configure the 
*      cryptographic hardware present on the system. 
*      All supported cryptographic hardware supports the PKCS #11 interface. 
*      Specify a string of the following format: 
*      GSK_PKCS11=<the PKCS #11 driver path and file name>;<the PKCS #11 token label>;
*      <the PKCS #11 token password>;<symmetric cipher setting>;
*      The PKCS #11 driver path is an absolute path to the shared library providing 
*      support for the PKCS #11 card. The PKCS #11 driver file name is the name of 
*      the shared library. An example of the value required for the PKCS #11 driver 
*      path and file name is /usr/lib/pkcs11/PKCS11_API.so 
*      To access symmetric cipher operations through GSKit, specify the symmetric 
*      cipher setting parameter. The value of this parameter is either: 
*   SYMMETRIC_CIPHER_OFF
*      Do not access symmetric cipher operations.
*   SYMMETRIC_CIPHER_ON
*      Access symmetric cipher operations.
*      If the symmetric cipher setting parameter is not specified, this has the 
*      same effect as specifying SYMMETRIC_CIPHER_OFF.
*      The maximum length of the string is 256 characters. The default value is blank.
*      If you specify a string that is not in the format listed above, you get an error.
*      When the SSLCRYP value is changed, the cryptographic hardware parameters specified 
*      become the ones used for new SSL connection environments. 
*      The new information becomes effective: 
*      - When a new channel process is started.
*      - For channels that run as threads of the channel initiator, 
*        when the channel initiator is restarted.
*      - For channels that run as threads of the listener, when the listener is restarted.
*      - When a REFRESH SECURITY TYPE(SSL) command is issued.
*
*ALTER QMGR SSLFIPS(NO)
*   This parameter is valid only on Windows and UNIX platforms. 
*   SSSLFIPS specifies whether only FIPS-certified algorithms are to be used 
*   if cryptography is carried out in WebSphere MQ. If cryptographic hardware 
*   is configured, the cryptographic modules used are those provided by the 
*   hardware product, and these might, or might not, be FIPS-certified to a 
*   particular level. This depends on the hardware product in use. 
*   For more information about FIPS, see the WebSphere MQ Security manual.
*   NO
*      WebSphere MQ provides an implementation of SSL cryptography that supplies 
*      FIPS-certified modules for all Version 7.0 platforms. 
*      If you set SSLFIPS to NO, any CipherSpec supported on a particular 
*      platform can be used. This is the queue managers initial default value. 
*      If  you are using GSKit Version 7 and  the queue manager runs without 
*      using cryptographic hardware, the following CipherSpecs run using 
*      FIPS 140–2 certified cryptography: 
*      - TLS_RSA_WITH_3DES_EDE_CBC_SHA
*      - FIPS_WITH_3DES_EDE_CBC_SHA
*      - TLS_RSA_WITH_AES_128_CBC_SHA
*      - TLS_RSA_WITH_AES_256_CBC_SHA
*      If you are using GSKit Version 8 and the queue manager runs without 
*      using cryptographic hardware, the following CipherSpecs run using 
*      FIPS 140–2 certified cryptography: 
*      - At TLS 1.0: 
*        - TLS_RSA_WITH_AES_128_CBC_SHA256
*        - TLS_RSA_WITH_AES_256_CBC_SHA256
*        - TLS_RSA_WITH_3DES_EDE_CBC_SHA
*      - At TLS 1.2: 
*        - TLS_RSA_WITH_AES_128_CBC_SHA256
*        - TLS_RSA_WITH_AES_256_CBC_SHA256
*   YES
*      Specifies that only FIPS-certified algorithms are to be used in the 
*      CipherSpecs allowed on all SSL connections from and to this queue manager. 
*      If you are using GSKit Version 7, inbound  and outbound SSL channel 
*      connections succeed only if one of the following CipherSpecs is used: 
*      - TLS_RSA_WITH_3DES_EDE_CBC_SHA
*      - FIPS_WITH_3DES_EDE_CBC_SHA
*      - TLS_RSA_WITH_AES_128_CBC_SHA
*      - TLS_RSA_WITH_AES_256_CBC_SHA
*      If you are using GSKit Version 8, inbound and outbound SSL channel 
*      connections succeed only if one of the following CipherSpecs is used: 
*      - At TLS 1.0: 
*        - TLS_RSA_WITH_AES_128_CBC_SHA256
*        - TLS_RSA_WITH_AES_256_CBC_SHA256
*        - TLS_RSA_WITH_3DES_EDE_CBC_SHA
*      - At TLS 1.2: 
*        - TLS_RSA_WITH_AES_128_CBC_SHA256
*        - TLS_RSA_WITH_AES_256_CBC_SHA256
* 
*    See Alternative SSL and TLS support for Windows, UNIX, and 
*    Linux systems for more information about using GSKit v8. 
*
*ALTER QMGR SSLKEYR(/var/mqm/qmgrs/<QMGR>/ssl/key) ***
*   SSLKEYR(string)
*   The name of the Secure Sockets Layer key repository. 
*   The maximum length of the string is 256 characters.
*   The format of the name depends on the environment: 
*   - On z/OS, it is the name of a key ring.
*   - On i5/OS, it is of the form pathname/keyfile, where keyfile is 
*     specified without the suffix (.kdb), and identifies a GSKit key 
*     database file. The default value is /QIBM/UserData/ICSS/Cert/Server/Default. 
*   If you specify *SYSTEM, WebSphere MQ utilizes the system certificate 
*   store as the key repository for the queue manager. As a result, the 
*   queue manager is registered as a server application in Digital Certificate 
*   Manager (DCM) and you can assign any server/client certificate in the system 
*   store to this application.
*   If you change the SSLKEYR parameter to a value other than *SYSTEM, 
*   WebSphere MQ deregisters the queue manager as an application with DCM.
*   - On UNIX it is of the form pathname/keyfile and on Windows pathname\keyfile, 
*   where keyfile is specified without the suffix (.kdb), and identifies a GSKit 
*   key database file. The default value for UNIX platforms is 
*   /var/mqm/qmgrs/QMGR/ssl/key, and on Windows it is 
*   C:\Program Files\IBM\WebSphere MQ\qmgrs\QMGR\ssl\key, where QMGR 
*   is replaced by the queue manager name (on UNIX and Windows).
*   On i5/OS, Windows and UNIX systems, the syntax of this parameter 
*   is validated to ensure that it contains a valid, absolute, directory path.
*   If SSLKEYR is blank, or is set to a value that does not correspond to 
*   a key ring or key database file, channels using SSL fail to start.
*   Changes to SSLKEYR become effective either: 
*   - On i5/OS, Windows and UNIX systems, when a new channel process is started.
*   - For channels that run as threads of the channel initiator on i5/OS, 
*     Windows and UNIX systems, when the channel initiator is restarted.
*   - For channels that run as threads of the listener on i5/OS, Windows 
*     and UNIX systems, when the listener is restarted.
*   - For channels that run as threads of a process pooling process (amqrmppa), 
*     when the process pooling process is started or restarted and first runs an 
*     SSL channel. If the process pooling process has already run an SSL channel, 
*     and you want the change to become effective immediately, 
*     run the MQSC command REFRESH SECURITY TYPE(SSL). 
*     - On z/OS, when the channel initiator is restarted.
*     - When a REFRESH SECURITY TYPE(SSL) command is issued.
*
*ALTER QMGR SSLRKEYC(0)
*   SSLRKEYC(integer)
*   The number of bytes to be sent and received within an SSL conversation 
*   before the secret key is renegotiated . The number of bytes includes 
*   control information. 
*   This value is used only by SSL channels which initiate communication 
*   from the queue manager (for example, the sender channel in a sender 
*   and receiver channel pairing).
*   If a value greater than zero is specified and channel heartbeats are 
*   enabled for the channel, the secret key is also renegotiated before 
*   message data is sent or received following a channel heartbeat. 
*   The count of bytes until the next secret key renegotiation is 
*   reset after each successful renegotiation.
*   Specify a value in the range zero through 999 999 999. 
*   A value of zero (the queue managers initial default value) 
*   means that the secret key is never renegotiated. If you specify 
*   an SSL/TLS secret key reset count between 1 byte and 32Kb, SSL/TLS 
*   channels will use a secret key reset count of 32Kb. 
*   This is to avoid the cost of excessive key resets which would 
*   occur for small SSL/TLS secret key reset values.
*   Attention: Non-zero values less than 4096 (4Kb) might cause channels 
*   to fail to start, or might cause inconsistencies in the values of SSLKEYDA, SSLKEYTI, and SSLRKEYS.
*
*ALTER QMGR TREELIFE(1800)                          
*   TREELIFE(integer) 
*   The lifetime, in seconds of non-administrative topics. 
*   Non-administrative topics are those created when an application publishes 
*   to, or subscribes on, a topic string that does not exist as an 
*   administrative node. When this non-administrative node no longer has any 
*   active subscriptions, this parameter determines how long the queue manager 
*   will wait before removing that node. Only non-administrative topics that 
*   are in use by a durable subscription remain after the queue manager is recycled.
*   Specify a value in the range 0 through 604 000. A value of 0 means that 
*   non-administrative topics are not removed by the queue manager. 
*   The queue managers initial default value is 1800.
*
*ALTER QMGR TRIGINT(999999999)
*   TRIGINT(integer) 
*   A time interval expressed in milliseconds. 
*   The TRIGINT parameter is relevant only if the trigger type (TRIGTYPE) 
*   is set to FIRST (see DEFINE QLOCAL for details). In this case trigger 
*   messages are normally generated only when a suitable message arrives 
*   on the queue, and the queue was previously empty. Under certain circumstances, 
*   however, an additional trigger message can be generated with FIRST triggering 
*   even if the queue was not empty. These additional trigger messages are not 
*   generated more often than every TRIGINT milliseconds. 
*   See the WebSphere MQ Application Programming Guide for more information.
*   Specify a value in the range zero through 999 999 999.
*
*ALTER QMGR ADOPTCHK
*   Specifies which elements are checked to determine whether an MCA 
*   should be adopted when a new inbound channel is detected with the same name as an already active MCA. 
*   ALL
*      Check the queue manager name and the network address. erform this check 
*      to prevent your channels from being inadvertently or maliciously shut down. 
*   This is the queue managers initial default value.
*
*ALTER QMGR PSMODE
*   Controls whether the publish/subscribe engine and the queued publish/subscribe 
*   interface are running, and therefore controls whether applications can publish 
*   or subscribe by using the application programming interface and the queues that 
*   are monitored by the queued publish/subscribe interface. 
*   COMPAT
*      The publish/subscribe engine is running. It is therefore possible to publish 
*      or subscribe by using the application programming interface. 
*      The queued publish/subscribe interface is not running. Any publish/subscribe 
*      messages put to the queues that are monitored by the queued publish/subscribe 
*      interface will not be acted upon.
*      Use this setting for compatibility with WebSphere Message Broker V6 or earlier 
*      versions that use this queue manager, because WebSphere Message Broker needs 
*      to read the same queues from which the queued publish/subscribe interface 
*      would normally read.
*   DISABLED
*      The publish/subscribe engine and the queued publish/subscribe interface are 
*      not running. It is therefore not possible to publish or subscribe by using 
*      the application programming interface. Any publish/subscribe messages put 
*      to the queues that are monitored by the queued publish/subscribe interface 
*      will not be acted upon.
*   ENABLED
*      The publish/subscribe engine and the queued publish/subscribe interface are 
*      running. It is therefore possible to publish or subscribe by using the 
*      application programming interface and the queues that are being monitored 
*      by the queued publish/subscribe interface. This is the queue managers i
*      nitial default value.
*   Note: Changing the PSMODE attribute can change the PSMODE status. 
*   Use DISPLAY PUBSUB, or on i5/OS DSPMQM, to determine the current state of 
*   the publish/subscribe engine and the queued publish/subscribe interface.
*
* **************************************************************** *
* **************************************************************** *
* **************************************************************** *
* Parameters below are valid on z/OS only.
* **************************************************************** *
* **************************************************************** *
* **************************************************************** *
* **************************************************************** *
*
*ALTER QMGR ACTCHL(200) 
*   The maximum number of channels that can be active at any time. 
*   Specify a value from 1 through 9 999 that is not greater than the value of MAXCHL. 
*   MAXCHL defines the maximum number of channels available . 
*   The queue managers initial default value is 200. *
*   For an explanation of which channel states are considered active, see Channel states.
*   If the value of this parameter is reduced, any current channels that exceed the 
*   new limit continue to run until they stop.
*   Changes to the ACTCHL parameter are only honored in a running channel initiator 
*   if the new value is less than or equal to the value of ACTCHL when the channel 
*   initiator was initialized. If the new value is greater than the value of ACTCHL 
*   when the channel initiator was initialized, the new value remains in the queue manager 
*   object and takes effect at the next channel initiator restart.
*   Sharing conversations do not contribute to the total for this parameter.
*   This parameter is valid on z/OS only.
*
*ALTER QMGR NETADDR
*   Check the network address.
*   NONE
*      Do no checking.
*   QMNAME
*      Check the queue manager name.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect the next time that a channel attempts to adopt an MCA.
*
*ALTER QMGR ADOPTMCA
*   Whether an orphaned instance of an MCA should be restarted immediately when 
*   a new inbound channel request matching the ADOPTCHK parameter is detetcted: 
*   ALL
*      Adopt all channel types. This is the queue managers initial default value.
*   NO
*      Adoption of orphaned channels is not required.
*   This parameter is valid on z/OS only
*   Changes to this parameter take effect the next time that a channel attempts to adopt an MCA.
*
*ALTER QMGR BRIDGEEV
*   Whether IMS™ Bridge events are generated. 
*   DISABLED
*      IMS Bridge events are not generated. This is the queue managers initial default value.
*   ENABLED
*      All IMS Bridge events are generated.
*   This parameter is valid on z/OS only.
*
*ALTER QMGR CHIADAPS(integer) 
*   The number of channel initiator adapter subtasks to use for processing WebSphere MQ calls. 
*   Specify a value in the range zero through 9 999. 
*   The queue managers initial default value is 8.
*   Suggested settings:
*      Test system       - 8 - (default)
*      Production system - 30
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*   For a discussion of the relationship between CHIADAPS, CHIDISPS and MAXCHL, 
*   see  Task 18: Tailor the channel initiator parameters
*
*ALGTER CHIDISPS(integer) 
*   The number of dispatchers to use in the channel initiator. 
*   Specify a value in the range 1 through 9 999. 
*   The queue managers initial default value is 5.
*   Suggested settings:
*      Test system       - 5 (default)
*      Production system - 20
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*   For a discussion of the relationship between CHIADAPS, CHIDISPS and MAXCHL, 
*   see  Task 18: Tailor the channel initiator parameters .
*
*ALTER QMGR CHISERVP
*   This parameter is reserved for use by IBM® use only; it is not for general use. 
*   This parameter is valid on z/OS only.
*
*ALTER QMGR CMDSCOPE
*   This parameter applies to z/OS only and specifies how the command is executed 
*   when the queue manager is a member of a queue-sharing group. 
*   *
*      The command is executed on the queue manager on which it was entered. This is the default value.
*   qmgr-name
*      The command is executed on the queue manager you specify, providing the 
*      queue manager is active within the queue-sharing group. 
*      You can specify a queue manager name, other than the queue manager on 
*      which the command was entered, only if you are using a queue-sharing 
*      group environment and if the command server is enabled.
*   *
*      The command is executed on the local queue manager and is also passed 
*      to every active queue manager in the queue-sharing group. The effect 
*      of this is the same as entering the command on every queue manager in the queue-sharing group.
*
*ALTER QMGR DNSGROUP(string) 
*   The name of the group that the TCP listener handling inbound transmissions 
*   for the queue-sharing group should join when using Workload Manager for 
*   Dynamic Domain Name Services support (WLM/DNS). 
*   The maximum length of this parameter is eighteen characters.
*   If this name is blank, the queue-sharing group name is used.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for listeners that are subsequently 
*   started. Listeners that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR DNSWLM
*   Whether the TCP listener that handles inbound transmissions for the 
*   queue-sharing group should register with WLM/DNS: 
*   NO
*      The listener is not to register with Workload Manager. 
*      This is the queue managers initial default value.
*   YES
*      The listener is to register with Workload Manager.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for listeners that are subsequently started.
*   Listeners that are currently started are unaffected by changes to this parameter.
*
*ALGTER LSTRTMR(integer) 
*   The time interval, in seconds, between attempts by WebSphere MQ to 
*   restart a listener after an APPC or TCP/IP failure. When the listener 
*   is restarted on TCP/IP, it uses the same port and IP address as it used when it first started. 
*   Specify a value in the range 5 through 9 999. The queue managers initial default value is 60.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for listeners that are subsequently started. 
*   Listeners that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR LUGROUP(string) 
*   The generic LU name to be used by the LU 6.2 listener that handles inbound 
*   transmissions for the queue-sharing group. The maximum length of this parameter is 8 characters. 
*   If this name is blank, the listener cannot be used.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for listeners that are subsequently started. 
*   Listeners that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR LUNAME(string) 
*   The name of the LU to use for outbound LU 6.2 transmissions. 
*   Set this to be the same as the name of the LU to be used by the listener 
*   for inbound transmissions. The maximum length of this parameter is 8 characters. 
*   If this name is blank, the APPC/MVS default LU name should be used. 
*   This is variable, so LUNAME should always be set if you are using LU 6.2
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*
*ALTER QMGR LU62ARM(string) 
*   The suffix of the APPCPM member of SYS1.PARMLIB. This suffix nominates the 
*   LUADD for this channel initiator. When automatic restart manager (ARM) 
*   restarts the channel initiator, the z/OS command SET APPC=xx is issued. 
*   If you do not provide a value for this parameter, no SET APPC=xx command is issued.
*   The maximum length of this parameter is 2 characters.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*
*ALTER QMGR LU62CHL(integer) 
*   The maximum number of channels that can be current, or clients that can 
*   be connected, that use the LU 6.2 transmission protocol. 
*   Specify a value from 0 - 9999 that is not greater than the value of MAXCHL. 
*   MAXCHL defines the maximum number of channels available . 
*   If you specify zero, the LU 6.2 transmission protocol is not used. 
*   The queue managers initial default value is 200.
*   This parameter is valid on z/OS only.
*   If the value of this parameter is reduced, any current channels that exceed the 
*   new limit continue to run until they stop.
*
*ALTER QMGR MAXCHL(integer) 
*   The maximum number of channels that can be current (including 
*   server-connection channels with connected clients). 
*   Specify a value in the range zero through 9 999. 
*   The queue managers initial default value is 200. Suggested settings:
*   Test system       - 200 (default)
*   Production system - 1000
*   The values of ACTCHL, LU62CHL, and TCPCHL must not be greater than the 
*   maximum number of channels. 
*   For an explanation of which channel states are considered current, 
*   see Channel states.
*   If the value of this parameter is reduced, any current channels that 
*   exceed the new limit continue to run until they stop.
*   Changes to the MAXCHL parameter are only honored in a running channel 
*   initiator if the new value is less than or equal to the value of MAXCHL 
*   when the channel initiator was initialized. If the new value is greater 
*   than the value of MAXCHL when the channel initiator was initialized, 
*   the new value remains in the queue manager object and takes effect at 
*   the next channel initiator restart.
*   Sharing conversations do not contribute to the total for this parameter.
*   This parameter is valid on z/OS only.
*   For a discussion of the relationship between CHIADAPS, CHIDISPS, and MAXCHL, 
*   see  Task 18: Tailor the channel initiator parameters .
*
*ALTER QMGR OPORTMAX(integer) 
*   The maximum value in the range of port numbers to be used when binding 
*   outgoing channels. When all the port numbers in the specified range have 
*   been used, outgoing channels bind to any available port number. 
*   Specify a value in the range zero through 65 535. The queue managers 
*   initial default value is zero and this means that all outgoing channels 
*   bind to any available port number.
*   Specify a corresponding value for OPORTMIN to define a range of port numbers 
*   and ensure that the value you specify for OPORTMAX is greater than or 
*   equal to the value you specify for OPORTMIN.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently 
*   started. Channels that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR OPORTMIN(integer) 
*   The minimum value in the range of port numbers to be used when binding 
*   outgoing channels. When all the port numbers in the specified range have 
*   been used, outgoing channels bind to any available port number. 
*   Specify a value in the range zero through 65 535. The queue managers initial default value is zero.
*   Specify a corresponding value for OPORTMAX to define a range of port numbers 
*   and ensure that the value you specify for OPORTMIN is less than or equal to 
*   the value you specify for OPORTMAX.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently started. 
*   Channels that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR EXPRYINT
*   Specifies how often queues are scanned to discard expired messages: 
*   OFF *
*      Queues are not scanned. No internal expiry processing is performed. 
*      This is the default.
*   integer
*      The approximate interval in seconds at which queues are scanned. 
*      Each time that the expiry interval is reached, the queue manager 
*      looks for candidate queues that are worth scanning to discard expired messages. 
*      The queue manager maintains information about the expired messages on 
*      each queue, and therefore whether a scan for expired messages is worthwhile. 
*      So, only a selection of queues is scanned at any time.
*      The value must be in the range 1 through 99 999 999. 
*      The minimum scan interval used is 5 seconds, even if you specify a lower value.
*   You must set the same EXPRYINT value for all queue managers within a queue-sharing 
*   group that support this attribute. Shared queues are scanned by only one queue manager 
*   in a queue-sharing group, and this is either the first queue manager to restart 
*   or the first queue manager to have had the EXPRYINT value set.
*   Changes to EXPRYINT take effect when the current interval expires, unless the 
*   new interval is less than the unexpired portion of the current interval, in which 
*   case a scan is scheduled immediately and the new interval value takes immediate effect.
*   This parameter is valid only on z/OS.
*
*ALTER QMGR GROUPUR 
*   This parameter controls whether XA client applications can establish 
*   transactions with a GROUP unit of recovery disposition. 
*   This parameter is valid only on z/OS. The property can be enabled 
*   only when the queue manager is a member of a queue-sharing group. 
*   ENABLED
*      XA client applications can establish transactions with a group 
*      unit of recovery disposition by specifying a QSG name when they connect.
*   DISABLED
*      XA client applications must connect using a queue manager name.
*
*ALTER QMGR IGQ 
*   Whether intra-group queuing is used. 
*   This parameter is valid only on z/OS when the queue manager is a member of a queue-sharing group. 
*   ENABLED
*      Message transfer between queue managers within a queue-sharing 
*      group uses the shared transmission queue (SYSTEM.QSG.TRANSMIT.QUEUE).
*   DISABLED
*      Message transfer between queue managers within a queue-sharing group 
*      uses non-shared transmission queues and channels. This is the same 
*      mechanism used for message transfer between queue managers that are 
*      not part of a queue-sharing group. This is the default value.
*   If intra-group queuing has been enabled, but the intra-group queuing 
*   agent has stopped for some reason, you can issue ALTER QMGR QMGR IGQ(ENABLED) 
*   to restart it.
*
*ALTER QMGR IGQAUT 
*   Specifies the type of authority checking and, therefore, the user IDs, 
*   to be used by the IGQ agent (IGQA). This establishes the authority to 
*   put messages to a destination queue. 
*   This parameter is valid only on z/OS when the queue manager is a member 
*   of a queue-sharing group. 
*   DEF
*      Indicates that the default user ID should be used to establish 
*      authority to put messages to a destination queue. This is the default value. 
*      For one user ID check, this involves using the user ID (referred to 
*      as QSGSEND) of the queue manager within the queue-sharing group that 
*      put the messages to the SYSTEM.QSG.TRANSMIT.QUEUE.
*      For two user ID checks, this involves using the QSGSEND user ID and the IGQ user ID.
*   CTX
*      Indicates that the user ID from the UserIdentifier field in the message 
*      descriptor, of a message on the SYSTEM.QSG.TRANSMIT.QUEUE, should be used 
*      to establish authority to put messages to a destination queue. 
*      For one user ID check, this involves using the QSGSEND user ID.
*      For two user ID checks, this might involve using the QSGSEND user ID, 
*      the IGQ user ID and the alternate user id (referred to as ALT) taken 
*      from the UserIdentifier field in the message descriptor of a message 
*      on the SYSTEM.QSG.TRANSMIT.QUEUE.
*   ONLYIGQ
*      Indicates that only the IGQ user ID should be used to establish 
*      authority to put messages to a destination queue. 
*      For all ID checks, this involves using the IGQ user ID.
*   ALTIGQ
*      Indicates that the IGQ user ID and the ALT user ID should be used to 
*      establish authority to put messages to a destination queue. 
*      For one user ID check, this uses the IGQ user ID.
*      For two user ID checks, this uses the IGQ user ID and the ALT user ID.
*
*ALTER QMGR IGQUSER 
*   Nominates a user ID (referred to as the IGQ user ID) to be used by the 
*   IGQ agent (IGQA) to establish authority to put messages to a destination queue. 
*   This parameter is valid only on z/OS when the queue manager is a member 
*   of a queue-sharing group. Possible values are: 
*   Blanks
*      This is the default value for the IGQ user ID and indicates that the 
*      user ID of the receiving queue manager within the QSG should be used.
*   Specific user ID
*      Indicates that the user ID specified in the receiving queue managers 
*      IGQUSER parameter should be used.
*   Note: 
*      1. As the receiving queue manager has authority to all queues it can access, 
*         this means that security checking might not be performed for this user ID type.
*      2. As the default value of blanks has a special meaning, you cannot use IGQUSER 
*         to specify a real user ID of blanks.
*
*ALTER QMGR RCVTIME(integer) 
*   The approximate length of time that a TCP/IP channel waits to receive data, 
*   including heartbeats, from its partner before returning to the inactive state. 
*   This parameter applies only to message channels (and not to MQI channels). 
*   This number can be qualified as follows: 
*   - To specify that this number is a multiplier to be applied to the negotiated 
*     HBINT value to determine how long a channel is to wait, set RCVTTYPE to MULTIPLY. 
*     Specify an RCVTIME value of zero or in the range 2 through 99. If you specify zero, 
*     the channel does not time out its wait to receive data from its partner.
*   - To specify that this number is a value, in seconds, to be added to the negotiated 
*     HBINT value to determine how long a channel is to wait, set RCVTTYPE to ADD. 
*     Specify an RCVTIME value in the range 1 through 999 999.
*   - To specify that this number is a value, in seconds, that the channel is to wait, 
*     set RCVTTYPE to EQUAL. Specify an RCVTIME value in the range zero through 999 999. 
*     If you specify zero, the channel does not time out its wait to receive data from its partner.
*   The queue managers initial default is zero.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently started. 
*   Channels that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR RCVTMIN(integer) 
*   The minimum length of time that a TCP/IP channel waits to receive data, 
*   including heartbeats, from its partner before returning to an inactive state. 
*   This parameter applies only to message channels (and not to MQI channels). 
*   If you use RCVTTYPE to specify that the TCP/IP channel wait time is relative 
*   to the negotiated value of HBINT and the resultant value is less than the 
*   value of this parameter, then the value of this parameter is used.
*   Specify a value, in seconds, between zero and 999 999. 
*   The queue managers initial default is zero.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently started. 
*   Channels that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR RCVTTYPE 
*   The qualifier to apply to the value in RCVTIME. 
*   MULTIPLY
*      Specifies that RCVTIME is a multiplier to be applied to the negotiated HBINT 
*      value to determine how long a channel will wait. This is the queue managers initial default.
*   ADD
*      Specifies that RCVTIME is a value, in seconds, to be added to the negotiated 
*      HBINT value to determine how long a channel will wait.
*   EQUAL
*      Specifies that RCVTIME is a value, in seconds, representing how long the channel will wait.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently started. 
*   Channels that are currently started are unaffected by changes to this parameter.
* 
*ALTER QMGR SCYCASE
*   Whether the security profiles are uppercase or mixed case. 
*   UPPER
*      The security profiles are uppercase only. This is the default value.
*   MIXED
*      The security profiles are mixed case. 
*      Changes to SCYCASE become effective after you run the following command:
*      REFFRESH SECURITY(*) TYPE(CLASSES) 
*   This parameter is valid only on z/OS
*
*ALTER QMGR SQQMNAME
*   When a queue manager makes an MQOPEN call for a shared queue and the 
*   queue manager that is specified in the ObjectQmgrName parameter of the 
*   MQOPEN call is in the same queue-sharing group as the processing queue manager, 
*   the SQQMNAME attribute specifies whether the ObjectQmgrName is used or whether 
*   the processing queue manager opens the shared queue directly. 
*   USE
*      The ObjectQmgrName is used, and the appropriate transmission queue is opened.
*   IGNORE
*      The processing queue manager opens the shared queue directly. 
*      This can reduce the traffic in your queue manager network.
*   This parameter is valid only on z/OS.
*
*ALTER QMGR SSLTASKS(integer)
*   The number of server subtasks to use for processing SSL calls. 
*   To use SSL channels, you must have at least two of these tasks running. 
*   This parameter is valid only on z/OS.
*   This is in the range zero through 9999. To avoid problems with storage allocation, 
*   do not set the SSLTASKS parameter to a value greater than 50.
*   Changes to this parameter will be effective when the channel initiator is restarted.
*
*ALTER QMGR TCPCHL(integer) 
*   The maximum number of channels that can be current, or clients that 
*   can be connected, that use the TCP/IP transmission protocol. 
*   The maximum number of sockets used is the sum of the values in TCPCHL 
*   and CHIDISPS. The z/OS UNIX System Services MAXFILEPROC parameter 
*   (specified in the BPXPRMxx member of SYS1.PARMLIB) controls how many 
*   sockets each task is allowed, and thus how many channels each dispatcher 
*   is allowed. In this case, the number of channels using TCP/IP is limited 
*   to the value of MAXFILEPROC multiplied by the value of CHIDISPS.
*   Specify a value from 0 - 9999. The value must not be greater than the 
*   value of MAXCHL. MAXCHL defines the maximum number of channels available. 
*   TCP/IP might not support as many as 9 999 channels. If this is the case, 
*   the value you can specify is limited by the number of channels TCP/IP can 
*   support. If you specify zero, the TCP/IP transmission protocol is not used. 
*   The queue managers initial default is 200. 
*   If the value of this parameter is reduced, any current channels that exceed 
*   the new limit continue to run until they stop.
*   Sharing conversations do not contribute to the total for this parameter.
*   This parameter is valid on z/OS only.
*
*ALTER QMGR TCPKEEP
*   Specifies whether the KEEPALIVE facility is to be used to check that the other 
*   end of the connection is still available. If it is not available, the channel is closed. 
*   NO
*      The TCP KEEPALIVE facility is not to be used. 
*      This is the queue managers initial default value.
*   YES
*      The TCP KEEPALIVE facility is to be used as specified in the TCP profile 
*      configuration data set. The interval is specified in the KAINT channel attribute.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect for channels that are subsequently started. 
*   Channels that are currently started are unaffected by changes to this parameter.
*
*ALTER QMGR TCPNAME(string) 
*   The name of either the only, or default, TCP/IP system to be used, depending 
*   on the value of TCPSTACK. This is the name of the z/OS UNIX System Services 
*   stack for TCP/IP, as specified in the SUBFILESYSTYPE NAME parameter in the 
*   BPXPRMxx member of SYS1.PARMLIB. The queue managers initial default value is 'TCPIP'. 
*   The maximum length of this parameter is 8 characters.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*ALTER QMGR TCPSTAC
*   Specifies whether the channel initiator can use only the TCP/IP address space 
*   specified in TCPNAME, or optionally bind to any selected TCP/IP address. 
*   SINGLE
*      The channel initiator can use only the TCP/IP address space specified 
*      in TCPNAME. This is the queue managers default value.
*   MULTIPLE
*      The channel initiator can use any TCP/IP address space available to it. 
*      It defaults to the one specified in TCPNAME if no other is specified for a channel or listener.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted.
*
*ALTER QMGR TRAXSTR
*   Specifies whether the channel initiator trace should start automatically: 
*   YES
*      Channel initiator trace is to start automatically. 
*      This is the queue managers default value.
*   NO
*      Channel initiator trace is not to start automatically.
*   This parameter is valid on z/OS only.
*   Changes to this parameter take effect when the channel initiator is restarted. 
*   If you want to start or stop channel initiator trace without restarting the channel
*   initiator, use the START TRACE or STOP TRACE commands after the channel initiator has started.
*
*ALTER QMGR TRAXTBL(integer) 
*   The size, in megabytes, of the channel initiator's trace data space. 
*   Specify a value in the range 2 through 2048. 
*   The queue managers initial default value is 2.
*   This parameter is valid on z/OS only.
*   Note: 
*   1. Changes to this parameter take effect immediately; any existing trace table 
*      contents are lost.
*   2. When you use large z/OS data spaces, ensure that sufficient auxiliary storage 
*      is available on your system to support any related z/OS paging activity. 
*      You might also need to increase the size of your SYS1.DUMP data sets.
*  
* EOF - crtqmgr_xtras.ini